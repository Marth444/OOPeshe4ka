#include <iostream>
#include <string>
#include <fstream>
using namespace std;

//Вопрос 31

//Перегрузка операций << и >> и введение в класс собственных инструментов ввода/вывода.

//введение в класс собственных инструментов ввода / вывода приведено в main
class test
{
	public:
		
//делать их дружественными не обязательно если поля в public, но т.к. обычно поля в прогах находятся в private, то надо )
		friend ostream& operator<<(ostream& os, const test& t);
		friend istream& operator>> (istream& is, test& t);

		test()
		{
			x = y = z = 0;
		}

		test( int X, int Y, int Z)
		{
			x = X;
			y = Y;
			z = Z;
		}

	private:
		int x;
		int y;
		int z;
};

// Перегрузка операций << и >>
// обязательно для этого нужно #include <fstream>
ostream& operator<<(ostream& os, const test& t)
{	
	os << t.x << " " << t.y << " " << t.z;
	return os;
}

istream& operator>> (istream& is, test& t)
{
	is >> t.x >> t.y >> t.z;
	return is;
}

int main()
{	
	//необязательная вещь в данном примере (оставил для себя)
	//setlocale(LC_ALL, "ru");

	test p(1, 2, 3);
	cout << p << endl;

////////////////////////////////////ВВОД//////////////////////////////////////////////////////
	//название файла
	string path = "myFile.txt";
	//создаём поток
	fstream fs;
	//открываем файл с названием
	fs.open(path);

	//записываем в файл нашу "p" с помощью ранее переопределённых "<<"
	fs << p << endl;
	//закрываем файл (поток), чтобы каретка сдвинулась в начало файла при дальнейшем открытии 
	//если это не сделать, то при чтении из файла считаются пустые элементы
	fs.close();

////////////////////////////////////ВЫВОД//////////////////////////////////////////////////////
	test pp;
	cout << "/////" << endl;
	cout << pp << endl;
	//открываем файл с названием
	fs.open(path);
	//считываем оттуда данные в "pp"
	fs >> pp;
	fs.close();
//////////////////////////////////////////////////////////////////////////////////////////////

	cout << "/////" << endl;
	cout << pp << endl;

}
